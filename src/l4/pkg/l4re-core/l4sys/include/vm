// vi:set ft=cpp: -*- Mode: C++ -*-
/**
 * \file
 * Virtualization interface
 */
/*
 * (c) 2008-2010 Adam Lackorzynski <adam@os.inf.tu-dresden.de>,
 *               Alexander Warg <warg@os.inf.tu-dresden.de>
 *     economic rights: Technische Universit√§t Dresden (Germany)
 *
 * This file is part of TUD:OS and distributed under the terms of the
 * GNU General Public License 2.
 * Please see the COPYING-GPL-2 file for details.
 *
 * As a special exception, you may use this file as part of a free software
 * library without restriction.  Specifically, if other files instantiate
 * templates or use macros or inline functions from this file, or you compile
 * this file and link it with other files to produce an executable, this
 * file does not by itself cause the resulting executable to be covered by
 * the GNU General Public License.  This exception does not however
 * invalidate any other reasons why the executable file might be covered by
 * the GNU General Public License.
 */

#pragma once

#include <l4/sys/vm.h>
#include <l4/sys/task>

namespace L4 {

/**
 * Virtual machine host address space.
 * \ingroup l4_kernel_object_api
 *
 * L4::Vm is a specialisation of L4::Task, used for virtual machines. The
 * microkernel employs an appropriate page-table format for hosting VMs, such
 * as ePT on VT-x. On Arm, it offers a call to make the virtual GICC area
 * available to the VM.
 */
class Vm : public Kobject_t<Vm, Task, L4_PROTO_VM>
{
protected:
  Vm();

private:
  Vm(Vm const &);
  void operator = (Vm const &);
};

};
