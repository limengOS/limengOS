# vim:set ft=l4mods:
# Module configuration file for single image mode
#
# kernel, sigma0 and moe are always loaded automatically
#
# add kernel command line arguments with
#  kernel fiasco arguments...
# the second argument (here 'fiasco') is the binary name
#
# add sigma command line arguments with
#  sigma0 sigma0 arguments...
# the second argument (here 'sigma0') is the binary name
#
# add roottask command line arguments with
#  roottask moe arguments...
# the second argument (here 'moe') is the binary name
#
# modaddr: address where modules start, relative to begin of RAM
#   this statement is either global (before first entry statement)
#   or per entry
#
# 'module' variants
# - module file: add file
# - module[uncompress] module name: uncompress module (gzip) before adding it
# - module[glob] /some/path/*.foo: add all file matching
# - module[perl] perl-code: Perl code returns array of files to include
# - module[shell] shell-code: Return list of files to include
# - module[fname=FOO] /some/path/bar: The file 'bar' will be added as the
#                                     module named 'FOO'.
# - moe file.cfg: expands to
#        roottask moe rom/file.cfg
#        module file.cfg
#
# Define a module group:
#  group oftenneedthose
#  module one
#  module two
#  module ...
#
# Use a module group:
#  entry someentry
#  module-group oftenneedthose
#
# Include other module list files:
#  include /path/to/other.list
#
# Set defaults:
# - default-kernel: set default kernel including arguments
# - default-sigma0: set default sigma0 including arguments
# - default-roottask: set default roottask including arguments

modaddr 0x01100000

default-kernel fiasco -serial_esc
default-bootstrap bootstrap

entry hello
roottask moe --init=rom/hello
module l4re
module hello

entry hello-cfg
kernel fiasco -serial_esc
roottask moe rom/hello.cfg
module l4re
module ned
module hello.cfg
module hello

entry hello-2
kernel fiasco -serial_esc
roottask moe rom/hello-2.cfg
module l4re
module ned
module hello-2.cfg
module hello

entry hello-shared
roottask moe --init=rom/ex_hello_shared
module l4re
module ex_hello_shared
module libld-l4.so
module libl4util.so
module libl4sys.so
module libl4sys-direct.so
module libdl.so
module lib4re.so
module lib4re-util.so
module libc_support_misc.so
module libc_be_socket_noop.so
module libc_be_l4refile.so
module libc_be_l4re.so
module libsupc++.so
module libuc_c.so
module libpthread.so

entry[arch=x86|amd64] framebuffer-example
roottask moe rom/x86-fb.cfg
module x86-fb.cfg
module l4re
module ned
module io
module x86-legacy.devs
module x86-fb.io
module fb-drv
module mag
module ex_fb_spectrum_cc

entry[arch=x86|amd64|arm|arm64] L4Linux-basic
roottask moe rom/l4lx.cfg
module l4lx.cfg
module l4re
module ned
module[arch=arm64] arch/l4/boot/dts/simple.dtb
module[uncompress] vmlinuz
module[perl] "ramdisk-$ENV{ARCH}.rd"

entry[arch=x86|amd64] L4Linux-mag
moe l4lx-gfx.cfg
module l4re
module ned
module io
module fb-drv
module mag
module x86-legacy.devs
module l4lx-x86.io
module[uncompress] vmlinuz
module[perl] "ramdisk-$ENV{ARCH}.rd"

entry[arch=arm|arm64] VM-basic
moe vm-basic.cfg
module l4re
module ned
module uvmm
module dtb/virt-arm_virt-32.dtb
module dtb/virt-arm_virt-64.dtb
module[arch=arm,fname=linux,nostrip]      https://l4re.org/download/Linux-kernel/arm32/Image-4.20-rc1
module[arch=arm64,fname=linux,nostrip]    https://l4re.org/download/Linux-kernel/arm64/Image-5.16.1
module[arch=arm,fname=ramdisk-arm.rd]     https://os.inf.tu-dresden.de/~adam/dl/ramdisks/ramdisk-armv7.rd
module[arch=arm64,fname=ramdisk-arm64.rd] https://os.inf.tu-dresden.de/~adam/dl/ramdisks/ramdisk-armv8-64.rd
# TODO: Add x86 and MIPS

entry[arch=arm|arm64] VM-multi
moe vm-multi.cfg
module l4re
module ned
module cons
module uvmm
module dtb/virt-arm_virt-32.dtb
module dtb/virt-arm_virt-64.dtb
module[arch=arm,fname=linux,nostrip]      https://l4re.org/download/Linux-kernel/arm32/Image-4.20-rc1
module[arch=arm64,fname=linux,nostrip]    https://l4re.org/download/Linux-kernel/arm64/Image-5.16.1
module[arch=arm,fname=ramdisk-arm.rd]     https://os.inf.tu-dresden.de/~adam/dl/ramdisks/ramdisk-armv7.rd
module[arch=arm64,fname=ramdisk-arm64.rd] https://os.inf.tu-dresden.de/~adam/dl/ramdisks/ramdisk-armv8-64.rd
# TODO: Add x86 and MIPS
